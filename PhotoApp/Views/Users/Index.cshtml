@using Microsoft.AspNetCore.Identity
@using PhotoApp.Models
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@model PaginatedList<PhotoApp.Models.User>
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by First name, Last name, or Username: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                Username
            </th>
            <th>
                First name
            </th>
            <th>
                Last name
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @if (SignInManager.IsSignedIn(User))
                {
                    @if (UserManager.GetUserName(User).Equals(item.UserName))
                    {
                        <td>
                            <a asp-area="Identity" asp-page="/Account/Manage/Index">@Html.DisplayFor(modelItem => item.UserName)</a>
                        </td>
                    }
                    else
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.UserName)
                        </td>
                    }
                }
                else
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FamilyName)
                </td>
                @if (SignInManager.IsSignedIn(User))
                {
                    @if (UserManager.GetUserName(User).Equals(item.UserName))
                    {
                        <td>
                            <a asp-area="Identity" asp-page="/Account/Manage/Index">Account Settings</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                        </td>
                    }
                    else
                    {
                        <td>
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                        </td>
                    }
                }
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>